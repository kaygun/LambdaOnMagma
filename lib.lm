let zero = λf.λx.x
let succ = λn.λf.λx.(f (n f x))
let add = λn.λm.λf.λx.(n f (m f x))
let mul = λn.λm.λf.(n (m f))
let F = zero
let T = λf.λx.f
let or  = λa.λb.(a a b)
let and = λa.λb.(a b a)
let X = λf.f (λx.λy.λz.x z (y z)) (λx.λy.λz.x)
let K = X X
let S = X (X X)
let I = S K (K K) 
let cons = λa.λb.λc.c a b
let car = λc.c T
let cdr = λc.c F
